@model CoinFill.ViewModels.PasswordResetViewModel
@using CoinFill.Helpers.Extensions

@{
    ViewData.SetTitle("Reset password");
    ViewData.SetMetaDescription("Enter a new password to reset the old one.");
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section StyleSheets {
    <link rel="stylesheet" href="~/sweet-alert2/sweetalert2.min.css" />
}

<div class="row flex-center">
    <div class="col-sm-10 col-md-8 col-lg-6">
        <div class="card">
            <div class="card-body p-4 p-sm-5">
                <div class="avatar avatar-4xl mb-3 d-flex mx-auto">
                    <img class="rounded-circle" src="@Model.ProfilePhoto" alt="@Model.FullName" />
                </div>
                <p class="text-center">@Model.FullName</p>
                <h4 class="mb-3 text-center text-primary">Reset your password</h4>
                <form id="password-reset-form" autocomplete="off">
                    @Html.AntiForgeryToken()
                    <input asp-for="Uid" type="hidden" />
                    <input asp-for="Token" type="hidden" />
                    <div class="form-group">
                        <label asp-for="Password"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fal fa-lock fa-fw"></i></span>
                            </div>
                            <input asp-for="Password"
                                   class="form-control"
                                   style="border-top-right-radius: 0.5rem !important; border-bottom-right-radius: 0.5rem !important;" />
                        </div>
                        <span>
                            <span asp-validation-for="Password" class="invalid-feedback"></span>
                            <br />
                        </span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ConfirmPassword"></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fal fa-lock fa-fw"></i></span>
                            </div>
                            <input asp-for="ConfirmPassword"
                                   class="form-control"
                                   style="border-top-right-radius: 0.5rem !important; border-bottom-right-radius: 0.5rem !important;" />
                        </div>
                        <span>
                            <span asp-validation-for="ConfirmPassword" class="invalid-feedback"></span>
                            <br />
                        </span>
                    </div>
                    <button id="btn-submit" type="button" class="btn btn-primary btn-block"><span id="btn-submit-text">Reset password</span></button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/sweet-alert2/sweetalert2.all.min.js"></script>
    <script>
        $(document).ready(function () {
            let password = $('#Password');
            let confirmPassword = $('#ConfirmPassword');
            let submit = $('#btn-submit');
            let submitText = $('#btn-submit-text');
            let submitTextUnchanged = submitText.html();
            let passwordResetForm = $('#password-reset-form');

            submit.click(function () {
                DisableInputs();
                let width = submit.width();
                let height = submit.height();

                submitText.fadeOut('fast', function () {
                    $(this).html('<div class="spinner mx-auto"></div>').fadeIn('slow');
                    submit.width(width);
                    submit.height(height);
                })

                setTimeout(function () {
                    if (FormIsValid()) {
                        let formData = new FormData(passwordResetForm.get(0));
                        formData.append('reset.Uid', $('#Uid').val());
                        formData.append('reset.Token', $('#Token').val());
                        formData.append('reset.Password', password.val());
                        formData.append('reset.ConfirmPassword', confirmPassword.val());

                        $.ajax({
                            url: '@Url.Action("PasswordReset", "Authorization")',
                            type: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,
                            headers: {
                                'RequestVerificationToken': $("input[name='__RequestVerificationToken']").val()
                            },
                            success: function (response) {
                                if (response.success === true) {
                                    submitText.fadeOut('fast', function () {
                                        $(this).html('<i class="ca-lightgreen fas fa-check no-tick"></i>').fadeIn('slow', function () {
                                            setTimeout(function () {
                                                Swal.mixin({
                                                    customClass: {
                                                        confirmButton: 'btn btn-sm btn-info mr-2',
                                                        cancelButton: 'btn btn-sm btn-falcon-secondary'
                                                    },
                                                    buttonsStyling: false
                                                }).fire({
                                                    title: response.title,
                                                    text: response.body,
                                                    icon: response.severity,
                                                    showCancelButton: true,
                                                    confirmButtonText: 'Sign in',
                                                    cancelButtonText: 'Later'
                                                }).then((result) => {
                                                    if (result.isConfirmed)
                                                        window.location.href = '@Url.Action("SignIn", "Authorization", new { Area = "" })'
                                                    else window.location.href = '@Url.Action("Index", "Home", new { Area = "" })'
                                                })
                                            }, 600)
                                        })
                                    })
                                } else {
                                    if (response.redirectUrl) window.location.href = response.redirectUrl;
                                    else HandleError(response.title, response.body, response.severity);
                                }
                            },
                            error: function (response) {
                                HandleError('An error occurred', 'Please refresh the page and try again or contact the customer support.', 'error')
                            }
                        })
                    } else HandleError('Fill all the required fields', '', 'info');
                }, 1200)
            })

            function ElementIsValid(element) {
                return passwordResetForm.validate().element($(element));
            }

            function FormIsValid() {
                const passwordValid = ElementIsValid(password);
                const confirmPasswordValid = ElementIsValid(confirmPassword);

                return (passwordValid && confirmPasswordValid);
            }

            function EnableInputs() {
                submit.prop('disabled', false);
                password.prop('readonly', false);
                confirmPassword.prop('readonly', false);
            }

            function DisableInputs() {
                submit.prop('disabled', true);
                password.prop('readonly', true);
                confirmPassword.prop('readonly', true);
            }

            function HandleError(title, body, severity) {
                submitText.fadeOut('fast', function () {
                    $(this).html('<i class="text-danger fas fa-times no-tick"></i>').fadeIn('slow');
                    toastr[severity](body, title)
                })
                    .promise()
                    .done(function () {
                        setTimeout(function () {
                            submitText.fadeOut('fast', function () {
                                $(this).text(submitTextUnchanged).fadeIn('slow');
                                EnableInputs();
                            })
                        }, 1300)
                    })
            }
        });
    </script>
}